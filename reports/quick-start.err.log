Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Calculate and plot overall feature importance (default bar plot and heatmap)
imp = explainer.importance()
display(
    imp.plot(
        max_nterms=20
    ) +
    p9.ggtitle("Importance Plot")
)
display(
    imp.plot(
        style='heatmap'
    ) +
    p9.ggtitle("Importance Heatmap")
)
------------------

----- stderr -----
/home/runner/work/pyramid-learn/pyramid-learn/src/midlearn/plotting.py:337: SyntaxWarning: invalid escape sequence '\h'
------------------

[31m---------------------------------------------------------------------------[39m
[31mNotImplementedError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[5][39m[32m, line 4[39m
[32m      1[39m [38;5;66;03m# Calculate and plot overall feature importance (default bar plot and heatmap)[39;00m
[32m      2[39m imp = explainer.importance()
[32m      3[39m display(
[32m----> [39m[32m4[39m     [43mimp[49m[43m.[49m[43mplot[49m[43m([49m
[32m      5[39m [43m        [49m[43mmax_nterms[49m[43m=[49m[32;43m20[39;49m
[32m      6[39m [43m    [49m[43m)[49m +
[32m      7[39m     p9.ggtitle([33m"[39m[33mImportance Plot[39m[33m"[39m)
[32m      8[39m )
[32m      9[39m display(
[32m     10[39m     imp.plot(
[32m     11[39m         style=[33m'[39m[33mheatmap[39m[33m'[39m
[32m     12[39m     ) +
[32m     13[39m     p9.ggtitle([33m"[39m[33mImportance Heatmap[39m[33m"[39m)
[32m     14[39m )

[36mFile [39m[32m~/work/pyramid-learn/pyramid-learn/src/midlearn/plotting.py:193[39m, in [36mplot_importance[39m[34m(importance, style, theme, max_nterms, **kwargs)[39m
[32m    168[39m [38;5;250m[39m[33;03m"""Visualize the importance scores of the component functions from a fitted MID model with plotnine.[39;00m
[32m    169[39m [33;03mThis is a porting function for the R function `midr::ggmid.mid.importance()`.[39;00m
[32m    170[39m 
[32m   (...)[39m[32m    190[39m [33;03m    A plotnine object representing the visualization of component importance.[39;00m
[32m    191[39m [33;03m"""[39;00m
[32m    192[39m style = utils.match_arg(style, [[33m'[39m[33mbarplot[39m[33m'[39m, [33m'[39m[33mheatmap[39m[33m'[39m])
[32m--> [39m[32m193[39m imp_df = [43mimportance[49m[43m.[49m[43mimportance[49m.copy()
[32m    194[39m [38;5;28;01mif[39;00m style == [33m'[39m[33mbarplot[39m[33m'[39m:
[32m    195[39m     [38;5;28;01mif[39;00m max_nterms [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

[36mFile [39m[32m~/work/pyramid-learn/pyramid-learn/src/midlearn/api.py:433[39m, in [36mMIDImportance.importance[39m[34m(self)[39m
[32m    431[39m [38;5;129m@property[39m
[32m    432[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mimportance[39m([38;5;28mself[39m):
[32m--> [39m[32m433[39m     [38;5;28;01mreturn[39;00m [43m_r_interface[49m[43m.[49m[43m_extract_and_convert[49m[43m([49m[43mr_object[49m[43m=[49m[38;5;28;43mself[39;49m[43m.[49m[43m_obj[49m[43m,[49m[43m [49m[43mname[49m[43m=[49m[33;43m'[39;49m[33;43mimportance[39;49m[33;43m'[39;49m[43m)[49m

[36mFile [39m[32m~/work/pyramid-learn/pyramid-learn/src/midlearn/_r_interface.py:204[39m, in [36m_extract_and_convert[39m[34m(r_object, name)[39m
[32m    199[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_extract_and_convert[39m(
[32m    200[39m     r_object: ListVector,
[32m    201[39m     name: [38;5;28mstr[39m
[32m    202[39m ) -> [38;5;28mobject[39m:
[32m    203[39m     [38;5;28;01mtry[39;00m:
[32m--> [39m[32m204[39m         idx = [38;5;28mlist[39m([43mr_object[49m[43m.[49m[43mnames[49m).index(name)
[32m    205[39m         element = r_object[idx]
[32m    206[39m     [38;5;28;01mexcept[39;00m [38;5;167;01mValueError[39;00m:

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/rpy2/robjects/vectors.py:309[39m, in [36mVector.names[39m[34m(self)[39m
[32m    307[39m [38;5;250m[39m[33;03m"""Names for the items in the vector."""[39;00m
[32m    308[39m res = [38;5;28msuper[39m().names
[32m--> [39m[32m309[39m res = [43mconversion[49m[43m.[49m[43mget_conversion[49m[43m([49m[43m)[49m[43m.[49m[43mrpy2py[49m[43m([49m[43mres[49m[43m)[49m
[32m    310[39m [38;5;28;01mreturn[39;00m res

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/functools.py:934[39m, in [36msingledispatch.<locals>.wrapper[39m[34m(*args, **kw)[39m
[32m    931[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m args:
[32m    932[39m     [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m([33mf[39m[33m'[39m[38;5;132;01m{[39;00mfuncname[38;5;132;01m}[39;00m[33m requires at least [39m[33m'[39m
[32m    933[39m                     [33m'[39m[33m1 positional argument[39m[33m'[39m)
[32m--> [39m[32m934[39m [38;5;28;01mreturn[39;00m [43mdispatch[49m[43m([49m[43margs[49m[43m[[49m[32;43m0[39;49m[43m][49m[43m.[49m[34;43m__class__[39;49m[43m)[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkw[49m[43m)[49m

[36mFile [39m[32m/opt/hostedtoolcache/Python/3.13.7/x64/lib/python3.13/site-packages/rpy2/robjects/conversion.py:408[39m, in [36m_raise_missingconverter[39m[34m(obj)[39m
[32m    401[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34m_raise_missingconverter[39m(obj):
[32m    402[39m     _missingconverter_msg = [33m"""[39m
[32m    403[39m [33m    Conversion rules for `rpy2.robjects` appear to be missing. Those[39m
[32m    404[39m [33m    rules are in a Python `contextvars.ContextVar`. This could be caused[39m
[32m    405[39m [33m    by multithreading code not passing context to the thread.[39m
[32m    406[39m [33m    Check rpy2[39m[33m'[39m[33ms documentation about conversions.[39m
[32m    407[39m [33m    [39m[33m"""[39m
[32m--> [39m[32m408[39m     [38;5;28;01mraise[39;00m [38;5;167;01mNotImplementedError[39;00m(_missingconverter_msg)

[31mNotImplementedError[39m: 
    Conversion rules for `rpy2.robjects` appear to be missing. Those
    rules are in a Python `contextvars.ContextVar`. This could be caused
    by multithreading code not passing context to the thread.
    Check rpy2's documentation about conversions.
    

